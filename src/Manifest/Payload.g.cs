// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: manifest/payload.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TEKSteamClient.Manifest {

  /// <summary>Holder for reflection information generated from manifest/payload.proto</summary>
  internal static partial class PayloadReflection {

    #region Descriptor
    /// <summary>File descriptor for manifest/payload.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PayloadReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZtYW5pZmVzdC9wYXlsb2FkLnByb3RvEhd0ZWtzdGVhbWNsaWVudC5tYW5p",
            "ZmVzdCLFAwoHUGF5bG9hZBI0CgVmaWxlcxgBIAMoCzIlLnRla3N0ZWFtY2xp",
            "ZW50Lm1hbmlmZXN0LlBheWxvYWQuRmlsZRqDAwoERmlsZRIMCgRuYW1lGAEg",
            "ASgJEgwKBHNpemUYAiABKAMSPQoFZmxhZ3MYAyABKA4yLi50ZWtzdGVhbWNs",
            "aWVudC5tYW5pZmVzdC5QYXlsb2FkLkZpbGUuRmlsZUZsYWcSOwoGY2h1bmtz",
            "GAYgAygLMisudGVrc3RlYW1jbGllbnQubWFuaWZlc3QuUGF5bG9hZC5GaWxl",
            "LkNodW5rEhgKC2xpbmtfdGFyZ2V0GAcgASgJSACIAQEaagoFQ2h1bmsSCwoD",
            "Z2lkGAEgASgMEhAKCGNoZWNrc3VtGAIgASgHEg4KBm9mZnNldBgDIAEoAxIZ",
            "ChF1bmNvbXByZXNzZWRfc2l6ZRgEIAEoBRIXCg9jb21wcmVzc2VkX3NpemUY",
            "BSABKAUiTQoIRmlsZUZsYWcSCAoETk9ORRAAEgwKCFJFQURPTkxZEAgSCgoG",
            "SElEREVOEBASDgoKRVhFQ1VUQUJMRRAgEg0KCURJUkVDVE9SWRBAQg4KDF9s",
            "aW5rX3RhcmdldEIaqgIXVEVLU3RlYW1DbGllbnQuTWFuaWZlc3RiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TEKSteamClient.Manifest.Payload), global::TEKSteamClient.Manifest.Payload.Parser, new[]{ "Files" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TEKSteamClient.Manifest.Payload.Types.File), global::TEKSteamClient.Manifest.Payload.Types.File.Parser, new[]{ "Name", "Size", "Flags", "Chunks", "LinkTarget" }, new[]{ "LinkTarget" }, new[]{ typeof(global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TEKSteamClient.Manifest.Payload.Types.File.Types.Chunk), global::TEKSteamClient.Manifest.Payload.Types.File.Types.Chunk.Parser, new[]{ "Gid", "Checksum", "Offset", "UncompressedSize", "CompressedSize" }, null, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  internal sealed partial class Payload : pb::IMessage<Payload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Payload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TEKSteamClient.Manifest.PayloadReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Payload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Payload(Payload other) : this() {
      files_ = other.files_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Payload Clone() {
      return new Payload(this);
    }

    /// <summary>Field number for the "files" field.</summary>
    public const int FilesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TEKSteamClient.Manifest.Payload.Types.File> _repeated_files_codec
        = pb::FieldCodec.ForMessage(10, global::TEKSteamClient.Manifest.Payload.Types.File.Parser);
    private readonly pbc::RepeatedField<global::TEKSteamClient.Manifest.Payload.Types.File> files_ = new pbc::RepeatedField<global::TEKSteamClient.Manifest.Payload.Types.File>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TEKSteamClient.Manifest.Payload.Types.File> Files {
      get { return files_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Payload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Payload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!files_.Equals(other.files_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= files_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      files_.WriteTo(output, _repeated_files_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      files_.WriteTo(ref output, _repeated_files_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += files_.CalculateSize(_repeated_files_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Payload other) {
      if (other == null) {
        return;
      }
      files_.Add(other.files_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            files_.AddEntriesFrom(input, _repeated_files_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            files_.AddEntriesFrom(ref input, _repeated_files_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Payload message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      internal sealed partial class File : pb::IMessage<File>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<File> _parser = new pb::MessageParser<File>(() => new File());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<File> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TEKSteamClient.Manifest.Payload.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public File() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public File(File other) : this() {
          name_ = other.name_;
          size_ = other.size_;
          flags_ = other.flags_;
          chunks_ = other.chunks_.Clone();
          linkTarget_ = other.linkTarget_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public File Clone() {
          return new File(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 2;
        private long size_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Size {
          get { return size_; }
          set {
            size_ = value;
          }
        }

        /// <summary>Field number for the "flags" field.</summary>
        public const int FlagsFieldNumber = 3;
        private global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag flags_ = global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag Flags {
          get { return flags_; }
          set {
            flags_ = value;
          }
        }

        /// <summary>Field number for the "chunks" field.</summary>
        public const int ChunksFieldNumber = 6;
        private static readonly pb::FieldCodec<global::TEKSteamClient.Manifest.Payload.Types.File.Types.Chunk> _repeated_chunks_codec
            = pb::FieldCodec.ForMessage(50, global::TEKSteamClient.Manifest.Payload.Types.File.Types.Chunk.Parser);
        private readonly pbc::RepeatedField<global::TEKSteamClient.Manifest.Payload.Types.File.Types.Chunk> chunks_ = new pbc::RepeatedField<global::TEKSteamClient.Manifest.Payload.Types.File.Types.Chunk>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::TEKSteamClient.Manifest.Payload.Types.File.Types.Chunk> Chunks {
          get { return chunks_; }
        }

        /// <summary>Field number for the "link_target" field.</summary>
        public const int LinkTargetFieldNumber = 7;
        private readonly static string LinkTargetDefaultValue = "";

        private string linkTarget_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LinkTarget {
          get { return linkTarget_ ?? LinkTargetDefaultValue; }
          set {
            linkTarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "link_target" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLinkTarget {
          get { return linkTarget_ != null; }
        }
        /// <summary>Clears the value of the "link_target" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLinkTarget() {
          linkTarget_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as File);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(File other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Size != other.Size) return false;
          if (Flags != other.Flags) return false;
          if(!chunks_.Equals(other.chunks_)) return false;
          if (LinkTarget != other.LinkTarget) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Size != 0L) hash ^= Size.GetHashCode();
          if (Flags != global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag.None) hash ^= Flags.GetHashCode();
          hash ^= chunks_.GetHashCode();
          if (HasLinkTarget) hash ^= LinkTarget.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Size != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Size);
          }
          if (Flags != global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag.None) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Flags);
          }
          chunks_.WriteTo(output, _repeated_chunks_codec);
          if (HasLinkTarget) {
            output.WriteRawTag(58);
            output.WriteString(LinkTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Size != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Size);
          }
          if (Flags != global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag.None) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Flags);
          }
          chunks_.WriteTo(ref output, _repeated_chunks_codec);
          if (HasLinkTarget) {
            output.WriteRawTag(58);
            output.WriteString(LinkTarget);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Size != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
          }
          if (Flags != global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag.None) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Flags);
          }
          size += chunks_.CalculateSize(_repeated_chunks_codec);
          if (HasLinkTarget) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LinkTarget);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(File other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Size != 0L) {
            Size = other.Size;
          }
          if (other.Flags != global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag.None) {
            Flags = other.Flags;
          }
          chunks_.Add(other.chunks_);
          if (other.HasLinkTarget) {
            LinkTarget = other.LinkTarget;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Size = input.ReadInt64();
                break;
              }
              case 24: {
                Flags = (global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag) input.ReadEnum();
                break;
              }
              case 50: {
                chunks_.AddEntriesFrom(input, _repeated_chunks_codec);
                break;
              }
              case 58: {
                LinkTarget = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Size = input.ReadInt64();
                break;
              }
              case 24: {
                Flags = (global::TEKSteamClient.Manifest.Payload.Types.File.Types.FileFlag) input.ReadEnum();
                break;
              }
              case 50: {
                chunks_.AddEntriesFrom(ref input, _repeated_chunks_codec);
                break;
              }
              case 58: {
                LinkTarget = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the File message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          internal enum FileFlag {
            [pbr::OriginalName("NONE")] None = 0,
            [pbr::OriginalName("READONLY")] Readonly = 8,
            [pbr::OriginalName("HIDDEN")] Hidden = 16,
            [pbr::OriginalName("EXECUTABLE")] Executable = 32,
            [pbr::OriginalName("DIRECTORY")] Directory = 64,
          }

          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          internal sealed partial class Chunk : pb::IMessage<Chunk>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Chunk> _parser = new pb::MessageParser<Chunk>(() => new Chunk());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Chunk> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::TEKSteamClient.Manifest.Payload.Types.File.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Chunk() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Chunk(Chunk other) : this() {
              gid_ = other.gid_;
              checksum_ = other.checksum_;
              offset_ = other.offset_;
              uncompressedSize_ = other.uncompressedSize_;
              compressedSize_ = other.compressedSize_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Chunk Clone() {
              return new Chunk(this);
            }

            /// <summary>Field number for the "gid" field.</summary>
            public const int GidFieldNumber = 1;
            private pb::ByteString gid_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pb::ByteString Gid {
              get { return gid_; }
              set {
                gid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "checksum" field.</summary>
            public const int ChecksumFieldNumber = 2;
            private uint checksum_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint Checksum {
              get { return checksum_; }
              set {
                checksum_ = value;
              }
            }

            /// <summary>Field number for the "offset" field.</summary>
            public const int OffsetFieldNumber = 3;
            private long offset_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public long Offset {
              get { return offset_; }
              set {
                offset_ = value;
              }
            }

            /// <summary>Field number for the "uncompressed_size" field.</summary>
            public const int UncompressedSizeFieldNumber = 4;
            private int uncompressedSize_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int UncompressedSize {
              get { return uncompressedSize_; }
              set {
                uncompressedSize_ = value;
              }
            }

            /// <summary>Field number for the "compressed_size" field.</summary>
            public const int CompressedSizeFieldNumber = 5;
            private int compressedSize_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CompressedSize {
              get { return compressedSize_; }
              set {
                compressedSize_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Chunk);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Chunk other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Gid != other.Gid) return false;
              if (Checksum != other.Checksum) return false;
              if (Offset != other.Offset) return false;
              if (UncompressedSize != other.UncompressedSize) return false;
              if (CompressedSize != other.CompressedSize) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Gid.Length != 0) hash ^= Gid.GetHashCode();
              if (Checksum != 0) hash ^= Checksum.GetHashCode();
              if (Offset != 0L) hash ^= Offset.GetHashCode();
              if (UncompressedSize != 0) hash ^= UncompressedSize.GetHashCode();
              if (CompressedSize != 0) hash ^= CompressedSize.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Gid.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(Gid);
              }
              if (Checksum != 0) {
                output.WriteRawTag(21);
                output.WriteFixed32(Checksum);
              }
              if (Offset != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(Offset);
              }
              if (UncompressedSize != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(UncompressedSize);
              }
              if (CompressedSize != 0) {
                output.WriteRawTag(40);
                output.WriteInt32(CompressedSize);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Gid.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(Gid);
              }
              if (Checksum != 0) {
                output.WriteRawTag(21);
                output.WriteFixed32(Checksum);
              }
              if (Offset != 0L) {
                output.WriteRawTag(24);
                output.WriteInt64(Offset);
              }
              if (UncompressedSize != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(UncompressedSize);
              }
              if (CompressedSize != 0) {
                output.WriteRawTag(40);
                output.WriteInt32(CompressedSize);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Gid.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Gid);
              }
              if (Checksum != 0) {
                size += 1 + 4;
              }
              if (Offset != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
              }
              if (UncompressedSize != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(UncompressedSize);
              }
              if (CompressedSize != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompressedSize);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Chunk other) {
              if (other == null) {
                return;
              }
              if (other.Gid.Length != 0) {
                Gid = other.Gid;
              }
              if (other.Checksum != 0) {
                Checksum = other.Checksum;
              }
              if (other.Offset != 0L) {
                Offset = other.Offset;
              }
              if (other.UncompressedSize != 0) {
                UncompressedSize = other.UncompressedSize;
              }
              if (other.CompressedSize != 0) {
                CompressedSize = other.CompressedSize;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Gid = input.ReadBytes();
                    break;
                  }
                  case 21: {
                    Checksum = input.ReadFixed32();
                    break;
                  }
                  case 24: {
                    Offset = input.ReadInt64();
                    break;
                  }
                  case 32: {
                    UncompressedSize = input.ReadInt32();
                    break;
                  }
                  case 40: {
                    CompressedSize = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Gid = input.ReadBytes();
                    break;
                  }
                  case 21: {
                    Checksum = input.ReadFixed32();
                    break;
                  }
                  case 24: {
                    Offset = input.ReadInt64();
                    break;
                  }
                  case 32: {
                    UncompressedSize = input.ReadInt32();
                    break;
                  }
                  case 40: {
                    CompressedSize = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
